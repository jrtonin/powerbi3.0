"0","{"
"0",""
"0","  # Step 1: Import hospitalization database and export raw base                     "
"0","  dHospi <- read_delim(""~/Profissional/SEPL/PowerBi 3/Banco de Dados/health/Hospitalizations.csv"", "
"0","    delim = "";"", escape_double = FALSE, locale = locale(decimal_mark = "","", "
"0","        grouping_mark = ""."", encoding = ""ISO-8859-1""), "
"0","    trim_ws = TRUE)"
"0","  "
"0","  write.csv(dHospi, ""C:/Users/CepaTech/Documents/GitHub/powerbi3.0/db/raw/health/dHospi.csv"")"
"0","  "
"0","  # Step 2: Rename columns"
"0","  colnames(dHospi)[1:2] <- c(""city"", ""variable"")"
"0","  "
"0","  # Step 3: Join city code with database"
"0","  dHospi <- left_join(dHospi, fCity, by = ""city"")"
"0","  "
"0","  #Step 4: rearrange dHospi"
"0","  dHospi <- dHospi[, c(1, 14, 2:13)]"
"0","  "
"0","}# Part 1: Import Hospitalization and Join with city_code"
"1","[1m[1mRows: [1m[22m[34m[34m1995[34m[39m [1m[1mColumns: [1m[22m[34m[34m13[34m[39m
"
"1","[36m--[39m [1m[1mColumn specification[1m[22m [36m-----------------------------------------------------------------------------[39m
[1mDelimiter:[22m "";""
[31mchr[39m  (2): Localidade, VariÃ¡vel
[32mdbl[39m (11): 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020
"
"1","
[36mi[39m Use [38;5;235m[48;5;253m[38;5;235m[48;5;253m`spec()`[48;5;253m[38;5;235m[49m[39m to retrieve the full column specification for this data.
[36mi[39m Specify the column types or set [38;5;235m[48;5;253m[38;5;235m[48;5;253m`show_col_types = FALSE`[48;5;253m[38;5;235m[49m[39m to quiet this message.
"
"0","{"
"0","  # Step 1: Separate variable, group and type columns"
"0","  dHospi <- cbind(dHospi, "
"0","                   as.data.frame(do.call(""rbind"", strsplit(as.character(dHospi$variable),' - '))))"
"0","  dHospi <- dHospi[, !colnames(dHospi) == ""V2""]"
"0","  dHospi <- cbind(dHospi, "
"0","                   as.data.frame(do.call(""rbind"","
"0","                                         ex_between(dHospi$V3, ""("", "")"", "
"0","                                                    include.markers = TRUE,"
"0","                                                    trim = TRUE,"
"0","                                                    ))))"
"0","  dHospi <- dHospi[, -17]"
"0","  colnames(dHospi)[15:16] <- c(""group"", ""variable"")"
"0","  dHospi <- dHospi[, c(1:2, 15:16, 4:14)]"
"0","  dHospi$variable <- gsub(""\\s*\\([^\\)]+\\)"","""", dHospi$variable)"
"0","  "
"0","} # Part 2: Create group_code, variable_code and type_code for Hospitalization"
"0",""
"0","{"
"0"," "
"0","  # Step 1: Import imunization database"
"0","  dImun <- read_delim(""~/Profissional/SEPL/PowerBi 3/Banco de Dados/health/imunization.csv"", "
"0","    delim = "";"", escape_double = FALSE, col_types = cols(`2010` = col_number(), "
"0","        `2011` = col_number(), `2012` = col_number(), "
"0","        `2013` = col_number(), `2014` = col_number(), "
"0","        `2015` = col_number(), `2016` = col_number(), "
"0","        `2017` = col_number(), `2018` = col_number(), "
"0","        `2019` = col_number(), `2020` = col_number()),"
"0","    locale = locale(decimal_mark = "","", grouping_mark = ""."", "
"0","        encoding = ""ISO-8859-1""), trim_ws = TRUE)"
"0","  "
"0","  write.csv(dImun, ""C:/Users/CepaTech/Documents/GitHub/powerbi3.0/db/raw/health/dImun.csv"")"
"0","  "
"0","  # Step 2: Rename columns"
"0","  colnames(dImun)[1:2] <- c(""city"", ""variable"")"
"0","  "
"0","  # Step 3: Join city code with database"
"0","  dImun <- left_join(dImun, fCity, by = ""city"")"
"0","  "
"0","  #Step 4: rearrange dImun"
"0","  dImun <- dImun[, c(1, 14, 2:13)]"
"0","  "
"0","} # Part 3: Import and clean Imunization"
"0",""
"0","{"
"0","  # Step 1: Separate variable, group and type columns"
"0","  dImun <- cbind(dImun, "
"0","                   as.data.frame(do.call(""rbind"", strsplit(as.character(dImun$variable),' - '))))"
"0","  "
"0","  dImun <- cbind(dImun, "
"0","                   as.data.frame(do.call(""rbind"","
"0","                                         ex_between(dImun$V2, ""("", "")"", "
"0","                                                    include.markers = TRUE,"
"0","                                                    trim = TRUE,"
"0","                                                    ))))"
"0","  dImun <- dImun[, -c(17:20)]"
"0","  colnames(dImun)[15:16] <- c(""group"", ""variable"")"
"0","  dImun <- dImun[, c(1:2, 15:16, 4:14)]"
"0","  dImun$variable <- gsub(""\\s*\\([^\\)]+\\)"","""", dImun$variable)"
"0","  "
"0","} # Part 4: Create Variable and Group Code for Imun"
"0",""
"0","{"
"0"," "
"0","  # Step 1: Import Leitos database"
"0","  dLeitos <- read_delim(""~/Profissional/SEPL/PowerBi 3/Banco de Dados/health/leitos.csv"", "
"0","    delim = "";"", escape_double = FALSE, col_types = cols(`2010` = col_number(), "
"0","        `2011` = col_number(), `2012` = col_number(), "
"0","        `2013` = col_number(), `2014` = col_number(), "
"0","        `2015` = col_number(), `2016` = col_number(), "
"0","        `2017` = col_number(), `2018` = col_number(), "
"0","        `2019` = col_number(), `2020` = col_number()), "
"0","    locale = locale(decimal_mark = "","", grouping_mark = ""."", "
"0","        encoding = ""ISO-8859-1""), trim_ws = TRUE)"
"0","  "
"0","  write.csv(dLeitos, ""C:/Users/CepaTech/Documents/GitHub/powerbi3.0/db/raw/health/dLeitos.csv"")"
"0","   "
"0","  "
"0","  # Step 2: Rename columns"
"0","  colnames(dLeitos)[1:2] <- c(""city"", ""variable"")"
"0","  "
"0","  # Step 3: Join city code with database"
"0","  dLeitos <- left_join(dLeitos, fCity, by = ""city"")"
"0","  "
"0","  #Step 4: rearrange dLeitos"
"0","  dLeitos <- dLeitos[, c(1, 14, 2:13)]"
"0","  "
"0","} # Part 5: Import and clean Leitos"
"0",""
"0","{"
"0","  # Step 1: Separate variable, group and type columns"
"0","  dLeitos <- cbind(dLeitos, "
"0","                   as.data.frame(do.call(""rbind"", strsplit(as.character(dLeitos$variable),' - '))))"
"0","  "
"0","  dLeitos <- unite(dLeitos, ""variable"", c(""V2"", ""V3""), sep = "" "", remove = TRUE)"
"0","  dLeitos$variable <- gsub(""Existente"", """", dLeitos$variable)"
"0","  colnames(dLeitos)[14] <- ""group"""
"0","  dLeitos <- dLeitos[, c(1:2, 14:15, 3:13)]"
"0","  "
"0","} # Part 6: Create Variable and Group for Leitos"
"0",""
"0","{"
"0"," "
"0","  # Step 1: Import mortality database"
"0","  dMorta <-  read_delim(""~/Profissional/SEPL/PowerBi 3/Banco de Dados/health/mortality.csv"", "
"0","    delim = "";"", escape_double = FALSE, col_types = cols(`2010` = col_number(), "
"0","        `2011` = col_number(), `2012` = col_number(), "
"0","        `2013` = col_number(), `2014` = col_number(), "
"0","        `2015` = col_number(), `2016` = col_number(), "
"0","        `2017` = col_number(), `2018` = col_number(), "
"0","        `2019` = col_number(), `2020` = col_number()), "
"0","    locale = locale(decimal_mark = "","", grouping_mark = ""."", "
"0","        encoding = ""ISO-8859-1""), trim_ws = TRUE)"
"0","  "
"0","  write.csv(dMorta, ""C:/Users/CepaTech/Documents/GitHub/powerbi3.0/db/raw/health/dMorta.csv"")"
"0","  "
"0","  # Step 2: Rename columns"
"0","  colnames(dMorta)[1:2] <- c(""city"", ""variable"")"
"0","  "
"0","  # Step 3: Join city code with database"
"0","  dMorta <- left_join(dMorta, fCity, by = ""city"")"
"0","  "
"0","  #Step 4: rearrange dMorta"
"0","  dMorta <- dMorta[, c(1, 14, 2:13)]"
"0","  "
"0","} # Part 7: Import and clean Mortality"
"0",""
"0","{"
"0","  # Step 1: Separate variable, group and type columns"
"0","  dMorta <- cbind(dMorta, "
"0","                   as.data.frame(do.call(""rbind"", strsplit(as.character(dMorta$variable),' - '))))"
"0","  "
"0","  dMorta <- unite(dMorta, ""variable"", c(""V2"", ""V3""), sep = "" "", remove = TRUE)"
"0","  colnames(dMorta)[14] <- ""group"""
"0","  dMorta <- dMorta[, c(1:2, 14:15, 3:13)]"
"0","  "
"0","} # Part 8: Create Variable and Group Code Mortality"
"0",""
"0","{"
"0"," "
"0","  # Step 1: Import professionals database"
"0","  dProfi <-    read_delim(""~/Profissional/SEPL/PowerBi 3/Banco de Dados/health/professionals.csv"", "
"0","    delim = "";"", escape_double = FALSE, col_types = cols(`2010` = col_number(), "
"0","        `2011` = col_number(), `2012` = col_number(),"
"0","        `2013` = col_number(), "
"0","        `2014` = col_number(), `2015` = col_number(), "
"0","        `2016` = col_number(), `2017` = col_number(), "
"0","        `2018` = col_number(), `2019` = col_number(), "
"0","        `2020` = col_number()), locale = locale(decimal_mark = "","", "
"0","        grouping_mark = ""."", encoding = ""ISO-8859-1""), "
"0","    trim_ws = TRUE)"
"0","  "
"0","  write.csv(dProfi, ""C:/Users/CepaTech/Documents/GitHub/powerbi3.0/db/raw/health/dProfi.csv"")"
"0",""
"0","  # Step 2: Rename columns"
"0","  colnames(dProfi)[1:2] <- c(""city"", ""variable"")"
"0","  "
"0","  # Step 3: Join city code with database"
"0","  dProfi <- left_join(dProfi, fCity, by = ""city"")"
"0","  "
"0","  #Step 4: rearrange dProfi"
"0","  dProfi <- dProfi[, c(1, 14, 2:13)]"
"0","  "
"0","} # Part 9: Import and clean professional"
"0",""
"0","{"
"0","  # Step 1: Separate variable, group and type columns"
"0","  dProfi <- cbind(dProfi, "
"0","                   as.data.frame(do.call(""rbind"", strsplit(as.character(dProfi$variable),' - '))))"
"0","  dProfi <- dProfi[, c(1:2, 15:16, 4:14)]"
"0","  colnames(dProfi)[3:4] <- c(""group"", ""variable"")"
"0","  "
"0","} # Part 10: Create Variable and Group Code Professional"
"0",""
"0","{"
"0"," "
"0","  # Step 1: Import expenses database"
"0","  dExpen <- read_delim(""~/Profissional/SEPL/PowerBi 3/Banco de Dados/health/expenses.csv"", "
"0","    delim = "";"", escape_double = FALSE, col_types = cols(`2010` = col_number(), "
"0","        `2011` = col_number(), `2012` = col_number(), "
"0","        `2013` = col_number(), `2014` = col_number(), "
"0","        `2015` = col_number(), `2016` = col_number(), "
"0","        `2017` = col_number(), `2018` = col_number(), "
"0","        `2019` = col_number(), `2020` = col_number()), "
"0","    locale = locale(decimal_mark = "","", grouping_mark = ""."", "
"0","        encoding = ""ISO-8859-1""), trim_ws = TRUE)"
"0","  "
"0","  write.csv(dExpen, ""C:/Users/CepaTech/Documents/GitHub/powerbi3.0/db/raw/health/dExpen.csv"")"
"0","     "
"0","  # Step 2: Rename columns"
"0","  colnames(dExpen)[1:2] <- c(""city"", ""variable"")"
"0","  "
"0","  # Step 3: Join city code with database"
"0","  dExpen <- left_join(dExpen, fCity, by = ""city"")"
"0","  "
"0","  #Step 4: rearrange dExpen"
"0","  dExpen <- dExpen[, c(1, 14, 2:13)]"
"0","  "
"0","} # Part 11: Import and clean Expenses"
"0",""
"0","{"
"0","  # Step 1: Separate variable, group and type columns"
"0","  dExpen <- cbind(dExpen, "
"0","                   as.data.frame(do.call(""rbind"", strsplit(as.character(dExpen$variable),' - '))))"
"0","  dExpen <- cbind(dExpen, "
"0","                   as.data.frame(do.call(""rbind"","
"0","                                         ex_between(dExpen$V2, ""("", "")"", "
"0","                                                    include.markers = TRUE,"
"0","                                                    trim = TRUE,"
"0","                                                    ))))"
"0","  "
"0","  "
"0","  # Step 2: Rename and rearrange Columns"
"0","  colnames(dExpen)[15:16] <- c(""group"", ""variable"")"
"0","  dExpen <- dExpen[, c(1:2, 15:16, 4:14)]"
"0","  "
"0","  # Step 3: Eliminate problematic symbols"
"0","  dExpen$variable <- gsub(""\\s*\\([^\\)]+\\)"","""", dExpen$variable)"
"0","  dExpen$group <- ""Despesas Municipais"""
"0","  "
"0","} # Part 12: Create variable and group"
"0",""
"0","{"
"0","  # Step 1: Bind all health databases"
"0","  dHealth <- rbind(dExpen, dHospi, dImun, dLeitos, dMorta, dProfi)"
"0","  "
"0","  # Step 2: Remove previous databases"
"0","  remove(dExpen, dHospi, dImun, dLeitos, dMorta, dProfi)"
"0","  "
"0","} # Part 13: Bind all databases"
"0",""
"0","{"
"0","  "
"0","  "
"0","  # Step 1: Create fGroup with codes"
"0","  fHealthGroup <- data.frame(group = unique(dHealth$group)) %>%"
"0","    mutate(group_code = sequence(n()))"
"0","  "
"0","  # Step 2: Create fvariable with codes"
"0","  fHealthVariable = dHealth %>%"
"0","    select(group, variable)"
"0","  fHealthVariable = fHealthVariable[!duplicated(fHealthVariable), ]"
"0","  fHealthVariable <- mutate(fHealthVariable, variable_code = sequence(n()))"
"0","  fHealthVariable <- left_join(fHealthVariable, fHealthGroup, by = ""group"")"
"0","  fHealthVariable <- fHealthVariable[, c(4,3,2)]"
"0","  "
"0","  # Step 4: Export to db parameters paste"
"0","  write.csv(fHealthGroup, "
"0","            ""C:/Users/CepaTech/Documents/GitHub/powerbi3.0/db/parameters/fHealthGroup.csv"")"
"0","  write.csv(fHealthVariable,"
"0","            ""C:/Users/CepaTech/Documents/GitHub/powerbi3.0/db/parameters/fHealthVariable.csv"")"
"0","  "
"0","  "
"0","} # Part 14: Create Codes for Group, variable and standard "
"0",""
"0","{"
"0",""
"0","  # Step 1: Join Group_code"
"0","  dHealth <- left_join(dHealth, fHealthGroup, by = ""group"", keep = FALSE)"
"0","  "
"0","  # Step 2: Join variable_code"
"0","  dHealth <- left_join(dHealth, fHealthVariable, by = c(""variable"", ""group_code""), keep = FALSE)"
"0","  "
"0","  # Step 3: Join standard code"
"0","  dHealth$standard_code <- case_when(dHealth$variable_code == 1|dHealth$variable_code == 3 ~ 1,"
"0","                                     dHealth$variable_code == 4 ~ 3,"
"0","                                     dHealth$variable_code >= 6 & dHealth$variable_code <= 22 ~ 4,"
"0","                                     TRUE ~ 5)"
"0","  "
"0","  # Step 5: Join Type code"
"0","  dHealth$type_code <- case_when(dHealth$standard_code == 1 | dHealth$standard_code == 5  ~ 3,"
"0","                                 dHealth$standard_code == 3 ~ 1,"
"0","                                 TRUE ~ 2)"
"0","  "
"0","  # Step 5: Clean dHealth"
"0","  dHealth <- dHealth[, c(1:2, 16:17, 19, 18, 5:15)]"
"0","  "
"0","} # Part 15: Join all codes with dHealth"
"0",""
"0","{"
"0","  "
"0","  # Step 1: Turn columns into one single column called year and the values as result"
"0","  dHealth <- gather(dHealth, key = ""year"", value = ""result"", c(""2010"":""2020""))"
"0","  "
"0","} # Part 16: Gather database"
"0",""
"0","{"
"0","  # Step 1: Join"
"0","  dHealth <- left_join(dHealth, fPop, by = c(""city"", ""year""))"
"0","  "
"0","  # Step 2: Drop columns and prepare to export"
"0","  dHealth <- dHealth[, -c(1, 9)]"
"0","  "
"0","  # Step 3: Export clean base"
"0","  write.table(dHealth,"
"0","              ""C:/Users/CepaTech/Documents/GitHub/powerbi3.0/db/clean/health/dHealth.csv"","
"0","              sep = "";"", dec = "","","
"0","              row.names = FALSE, col.names = TRUE, "
"0","              na = """")"
"0","  "
"0","  # Step 4: Remove Health parameters"
"0","  remove(fHealthGroup, fHealthVariable)"
"0","} # Part 17: Join dHealth and Population"
"0",""
"0",""
"0",""
