"0",""
"0","{"
"0","  # Step 1: Import Auxilio Emergencial"
"0","  dAuxEmerg <- read_csv(""~/Profissional/SEPL/PowerBi 3/Banco de Dados/Pobreza/ae.csv"", "
"0","    locale = locale(decimal_mark = "","", grouping_mark = ""."", "
"0","        encoding = ""ISO-8859-1"")) %>%"
"0","    filter(UF == ""PR"")"
"0","  "
"0","  write.csv(dAuxEmerg, ""C:/Users/CepaTech/Documents/GitHub/powerbi3.0/db/raw/poverty/dAuxEmerg.csv"")"
"0","  "
"0","  dAuxEmerg <- dAuxEmerg[, c(2, 4:6)]"
"0","  colnames(dAuxEmerg) <-  c(""city"", ""year"", ""Elegiveis ao Auxilio"", ""Soma do Auxilio"")"
"0","  "
"0","  dAuxEmerg <- gather(dAuxEmerg, key = ""variable"", value = ""result"", ""Elegiveis ao Auxilio"", ""Soma do Auxilio"")"
"0","  dAuxEmerg$city <- tolower(dAuxEmerg$city)"
"0","  dAuxEmerg$city <- gsub(""¬¥"", ""'"", dAuxEmerg$city)"
"0","  dAuxEmerg$standard <- case_when(dAuxEmerg$variable == ""Elegiveis ao Auxilio"" ~ ""por mil hab"","
"0","                                  TRUE ~ ""reais"")"
"0","  "
"0","  # Step 2: Import CadUnico"
"0","  dCadUnico <- read_csv(""~/Profissional/SEPL/PowerBi 3/Banco de Dados/Pobreza/caunico.csv"", "
"0","    locale = locale(decimal_mark = "","", grouping_mark = ""."", "
"0","        encoding = ""ISO-8859-1""))"
"0","  "
"0","  ##Export"
"0","    write.csv(dCadUnico, ""C:/Users/CepaTech/Documents/GitHub/powerbi3.0/db/raw/poverty/dCadUnico.csv"")"
"0",""
"0","  "
"0","  dCadUnico <- dCadUnico[, c(2, 4:5)]"
"0","  colnames(dCadUnico) <- c(""city"", ""year"", ""result"")"
"0","  "
"0","  # Step 3: Make result yearly"
"0","  dCadUnico <- cbind(dCadUnico, str_split_fixed(dCadUnico$year, ""/"", 2))"
"0","  dCadUnico <- dCadUnico[, c(1,3,5)]"
"0","  colnames(dCadUnico)[3] <- ""year"""
"0","  dCadUnico <- dCadUnico %>%"
"0","    group_by(city, year) %>%"
"0","    summarize(result = sum(result)/n())"
"0","  dCadUnico$result <- round(dCadUnico$result, 0)"
"0","  "
"0","  # Step 4: Make City lower to join with code"
"0","  dCadUnico$city <- tolower(dCadUnico$city)"
"0","  dCadUnico$city <- gsub(""¬¥"", ""'"", dCadUnico$city)"
"0","  "
"0","  # Step 5: Rearrange database"
"0","  dCadUnico$variable <- ""Pessoas no CadUnico"""
"0","  dCadUnico$standard <- ""por mil hab"""
"0","  dCadUnico <- dCadUnico[, c(1,2,4,3,5)]"
"0","  "
"0","  # Step 6: Import Pessoas no Bolsa Familia"
"0","  dPessoBolsa <- read_csv(""~/Profissional/SEPL/PowerBi 3/Banco de Dados/Pobreza/pessoasbeneficiadasbolsafamilia.csv"", "
"0","    locale = locale(decimal_mark = "","", grouping_mark = ""."", "
"0","        encoding = ""ISO-8859-1""))"
"0","  dPessoBolsa <- filter(dPessoBolsa, UF == ""PR"")"
"0","  "
"0","  ##Export"
"0","  write.csv(dPessoBolsa, ""C:/Users/CepaTech/Documents/GitHub/powerbi3.0/db/raw/poverty/dPessoBolsa.csv"")"
"0",""
"0","  "
"0","  dPessoBolsa <- dPessoBolsa[, c(2,4:5)]"
"0","  colnames(dPessoBolsa) <- c(""city"", ""ref"", ""Pessoas no Bolsa Familia"")"
"0","  "
"0","  # Step 7: Make city as lowercase to join"
"0","  dPessoBolsa$city <- tolower(dPessoBolsa$city) "
"0","  dPessoBolsa$city <- gsub(""¬¥"", ""'"", dPessoBolsa$city)"
"0","  "
"0","  # Step 8: Make result yearly"
"0","  dPessoBolsa <- cbind(dPessoBolsa, str_split_fixed(dPessoBolsa$ref, ""/"", 2))"
"0","  colnames(dPessoBolsa)[5] <- ""year"""
"0","  dPessoBolsa <- dPessoBolsa[, c(1,5,3)]"
"0","  dPessoBolsa <- dPessoBolsa %>%"
"0","    group_by(city, year) %>%"
"0","    summarize(result = sum(`Pessoas no Bolsa Familia`)/n())"
"0","  dPessoBolsa$result <- round(dPessoBolsa$result, 0)"
"0","  "
"0","  # Step 9: Rearrange Database"
"0","  dPessoBolsa$standard <- ""por mil hab"""
"0","  dPessoBolsa$variable <- ""Pessoas no Bolsa Familia"""
"0","  dPessoBolsa <- dPessoBolsa[, c(1,2,5,3, 4)]"
"0","  "
"0","  "
"0","  # Step 10: Import Valor do Bolsa Familia"
"0","  dValorBolsa <- read_csv(""~/Profissional/SEPL/PowerBi 3/Banco de Dados/Pobreza/valorbolsafamilia.csv"", "
"0","    locale = locale(decimal_mark = "","", grouping_mark = ""."", "
"0","        encoding = ""ISO-8859-1""))"
"0","  "
"0","  dValorBolsa <- dValorBolsa %>%"
"0","    filter(UF == ""PR"")"
"0","  "
"0","  ##Export"
"0","  write.csv(dValorBolsa, ""C:/Users/CepaTech/Documents/GitHub/powerbi3.0/db/raw/poverty/dValorBolsa.csv"")"
"0",""
"0","  "
"0","  dValorBolsa$`Unidade Territorial` <- tolower(dValorBolsa$`Unidade Territorial`)"
"0","  "
"0","  # Step 11: Make rresult yearly"
"0","  dValorBolsa <- cbind(dValorBolsa, str_split_fixed(dValorBolsa$Refer√™ncia,""/"", 2))"
"0","  dValorBolsa <- dValorBolsa[, c(2,7, 5)]"
"0","  colnames(dValorBolsa)[c(1:3)] <- c(""city"", ""year"", ""result"")"
"0","  dValorBolsa <- dValorBolsa %>%"
"0","    group_by(city, year) %>%"
"0","    summarize(result = sum(result)/n())"
"0","  "
"0","  # Step 12: Rearrange Database"
"0","  dValorBolsa$variable <- ""Valor do Bolsa Familia"""
"0","  dValorBolsa$standard <- ""reais"""
"0","  dValorBolsa <- dValorBolsa[,c(1:2, 4, 3,5)]"
"0","  "
"0","  # Step 13: Import IPDM"
"0","  dIPDM <- read_delim(""~/Profissional/SEPL/PowerBi 3/Banco de Dados/Pobreza/ipdm.csv"", "
"0","    delim = "";"", escape_double = FALSE, locale = locale(decimal_mark = "","", "
"0","        grouping_mark = ""."", encoding = ""ISO-8859-1""), "
"0","    trim_ws = TRUE)"
"0","  "
"0","  ##Export"
"0","  write.csv(dIPDM, ""C:/Users/CepaTech/Documents/GitHub/powerbi3.0/db/raw/poverty/dIPDM.csv"")"
"0",""
"0",""
"0","  "
"0","} # Part 1: Import Database"
"2","New names:
* `` -> ...7
* `` -> ...8
* `` -> ...9
* `` -> ...10
* `` -> ...11
* ...
"
"1","[1m[1mRows: [1m[22m[34m[34m11140[34m[39m [1m[1mColumns: [1m[22m[34m[34m13[34m[39m
"
"1","[36m--[39m [1m[1mColumn specification[1m[22m [36m-----------------------------------------------------------------------------[39m
[1mDelimiter:[22m "",""
[31mchr[39m (2): Unidade Territorial, UF
[32mdbl[39m (7): C√≥digo, Refer√™ncia, total de pessoas eleg√≠veis ao recebimento do aux√≠lio emergencial, .....
"
"1","
[36mi[39m Use [38;5;235m[48;5;253m[38;5;235m[48;5;253m`spec()`[48;5;253m[38;5;235m[49m[39m to retrieve the full column specification for this data.
[36mi[39m Specify the column types or set [38;5;235m[48;5;253m[38;5;235m[48;5;253m`show_col_types = FALSE`[48;5;253m[38;5;235m[49m[39m to quiet this message.
"
"1","[1m[1mRows: [1m[22m[34m[34m43092[34m[39m [1m[1mColumns: [1m[22m[34m[34m5[34m[39m
"
"1","[36m--[39m [1m[1mColumn specification[1m[22m [36m-----------------------------------------------------------------------------[39m
[1mDelimiter:[22m "",""
[31mchr[39m (3): Unidade Territorial, UF, Refer√™ncia
[32mdbl[39m (2): C√≥digo, Total de pessoas inscritas no Cadastro √önico
"
"1","
[36mi[39m Use [38;5;235m[48;5;253m[38;5;235m[48;5;253m`spec()`[48;5;253m[38;5;235m[49m[39m to retrieve the full column specification for this data.
[36mi[39m Specify the column types or set [38;5;235m[48;5;253m[38;5;235m[48;5;253m`show_col_types = FALSE`[48;5;253m[38;5;235m[49m[39m to quiet this message.
"
"1","`summarise()` has grouped output by 'city'. You can override using the `.groups` argument.
"
"1","[1m[1mRows: [1m[22m[34m[34m239510[34m[39m [1m[1mColumns: [1m[22m[34m[34m5[34m[39m
"
"1","[36m--[39m [1m[1mColumn specification[1m[22m [36m-----------------------------------------------------------------------------[39m
[1mDelimiter:[22m "",""
[31mchr[39m (3): Unidade Territorial, UF, Refer√™ncia
[32mdbl[39m (2): C√≥digo, Quantidade total de pessoas em fam√≠lias benefici√°rias do Programa Bolsa Fam√≠lia
"
"1","
[36mi[39m Use [38;5;235m[48;5;253m[38;5;235m[48;5;253m`spec()`[48;5;253m[38;5;235m[49m[39m to retrieve the full column specification for this data.
[36mi[39m Specify the column types or set [38;5;235m[48;5;253m[38;5;235m[48;5;253m`show_col_types = FALSE`[48;5;253m[38;5;235m[49m[39m to quiet this message.
"
"1","`summarise()` has grouped output by 'city'. You can override using the `.groups` argument.
"
"1","[1m[1mRows: [1m[22m[34m[34m1185692[34m[39m [1m[1mColumns: [1m[22m[34m[34m5[34m[39m
"
"1","[36m--[39m [1m[1mColumn specification[1m[22m [36m-----------------------------------------------------------------------------[39m
[1mDelimiter:[22m "",""
[31mchr[39m (3): Unidade Territorial, UF, Refer√™ncia
[32mdbl[39m (1): C√≥digo
"
"1","
[36mi[39m Use [38;5;235m[48;5;253m[38;5;235m[48;5;253m`spec()`[48;5;253m[38;5;235m[49m[39m to retrieve the full column specification for this data.
[36mi[39m Specify the column types or set [38;5;235m[48;5;253m[38;5;235m[48;5;253m`show_col_types = FALSE`[48;5;253m[38;5;235m[49m[39m to quiet this message.
"
"1","`summarise()` has grouped output by 'city'. You can override using the `.groups` argument.
"
"1","[1m[1mRows: [1m[22m[34m[34m399[34m[39m [1m[1mColumns: [1m[22m[34m[34m11[34m[39m
"
"1","[36m--[39m [1m[1mColumn specification[1m[22m [36m-----------------------------------------------------------------------------[39m
[1mDelimiter:[22m "";""
[31mchr[39m (2): Localidade, Vari√°vel
[32mdbl[39m (9): 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018
"
"1","
[36mi[39m Use [38;5;235m[48;5;253m[38;5;235m[48;5;253m`spec()`[48;5;253m[38;5;235m[49m[39m to retrieve the full column specification for this data.
[36mi[39m Specify the column types or set [38;5;235m[48;5;253m[38;5;235m[48;5;253m`show_col_types = FALSE`[48;5;253m[38;5;235m[49m[39m to quiet this message.
"
"0","{"
"0","  # Step 1: Bind same type data"
"0","  dPover <- rbind(dAuxEmerg, dCadUnico, dPessoBolsa, dValorBolsa) %>%"
"0","    mutate(group = ""Assistencia Social"")"
"0","  "
"0","  # Step 2: Poverty Create Code Group and Variable"
"0","  fPoverGroup <- data.frame( group = c(""Assistencia Social"", ""Indice""), group_code = c(1:2))"
"0","  "
"0","  fPoverVariable = dPover %>%"
"0","    select(group, variable) %>%"
"0","    rbind(c(""Indice"", ""√çndice Ipardes de Desempenho Municipal (IPDM)""))"
"0","  "
"0","  fPoverVariable = fPoverVariable[!duplicated(fPoverVariable), ]"
"0","  fPoverVariable <- mutate(fPoverVariable, variable_code = sequence(n()))"
"0","  fPoverVariable <- left_join(fPoverVariable, fPoverGroup, by = ""group"")"
"0","  fPoverVariable <- fPoverVariable[, c(4,3,2)]"
"0","  "
"0","  "
"0","  "
"0","  write.csv(fPoverVariable, "
"0","            ""C:/Users/CepaTech/Documents/GitHub/powerbi3.0/db/parameters/fPoverVariable.csv"")"
"0","  write.csv(fPoverGroup, "
"0","            ""C:/Users/CepaTech/Documents/GitHub/powerbi3.0/db/parameters/fPoverGroup.csv"")"
"0","  "
"0","  # Step 3: Join codes with dPover"
"0","  "
"0","  dPover <- left_join(dPover, fCity2, by = ""city"")"
"0","  dPover <- left_join(dPover, fPoverVariable, by = ""variable"")"
"0","  fPop2 <- fPop"
"0","  fPop2$city <- tolower(fPop$city)"
"0","  dPover <- left_join(dPover, fPop2, by = c(""city"", ""year""))"
"0","  dPover <- left_join(dPover, fStandard, by = ""standard"")"
"0","  colnames(dPover)[c(3,11)] <- c(""variable"", ""population"")"
"0","  dPover$type_code <- case_when(dPover$variable == ""Elegiveis ao Auxilio"" ~ 3,"
"0","                                dPover$variable == ""Pessoas no CadUnico"" ~3,"
"0","                                dPover$variable == ""Pessoas no Bolsa Familia"" ~ 3,"
"0","                                dPover$variable_code == 2 ~ 3,"
"0","                                dPover$variable_code == 5 ~ 3,"
"0","                                TRUE ~ 2)"
"0","  "
"0","  dPover <- dPover[, c(7, 9:10, 13:14, 2, 4, 12)]"
"0","  "
"0","  # Step: 4: Join Codes with IPDM"
"0","  colnames(dIPDM)[1:2] <- c(""city"", ""variable"")"
"0","  dIPDM$group <- ""Indice"""
"0","  dIPDM$standard <- """""
"0","  dIPDM$type <- ""rate"""
"0","  "
"0","  dIPDM <- gather(dIPDM, key = ""year"", value = ""result"", ""2010"":""2018"")"
"0","  "
"0","  dIPDM <- left_join(dIPDM, fCity, by = ""city"")"
"0","  dIPDM <- left_join(dIPDM, fPoverVariable, by = ""variable"")"
"0","  dIPDM <- left_join(dIPDM, fStandard, ""standard"")"
"0","  dIPDM <- left_join(dIPDM, fType, ""type"")"
"0","  dIPDM <- left_join(dIPDM, fPop, c(""city"", ""year""))"
"0","  "
"0","  dIPDM <- dIPDM[, c(8, 10:13, 6:7, 15)]"
"0","  "
"0","} # Part 2: Adding Codes"
"0",""
"0","{"
"0","  # Step 1: Bind"
"0","  dPover <- rbind(dPover, dIPDM)"
"0","  "
"0","  # Step 2: Export clean base"
"0","  write.table(dPover,"
"0","              ""C:/Users/CepaTech/Documents/GitHub/powerbi3.0/db/clean/poverty/dPover.csv"","
"0","              sep = "";"", dec = "","","
"0","              row.names = FALSE, col.names = TRUE, "
"0","              na = """")"
"0","  "
"0","  # Step 4: Remove Poverty parameter"
"0","  remove(dAuxEmerg, dCadUnico, dIPDM, dPessoBolsa, dValorBolsa, fPoverGroup, fPoverVariable)"
"0",""
"0","  "
"0","} # Part 3: Join into one Povery DF"
"0",""
